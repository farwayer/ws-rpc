'use strict'; // code generated by pbf v3.2.0

var NullValue = exports.NullValue = {
    "NULL_VALUE": {
        "value": 0,
        "options": {}
    }
};

// Packet ========================================

var Packet = exports.Packet = {};

Packet.read = function (pbf, end) {
    return pbf.readFields(Packet._readField, {jsonrpc: 0, msgs: []}, end);
};
Packet._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.jsonrpc = pbf.readVarint();
    else if (tag === 2) obj.msgs.push(Message.read(pbf, pbf.readVarint() + pbf.pos));
};
Packet.write = function (obj, pbf) {
    if (obj.jsonrpc) pbf.writeVarintField(1, obj.jsonrpc);
    if (obj.msgs) for (var i = 0; i < obj.msgs.length; i++) pbf.writeMessage(2, Message.write, obj.msgs[i]);
};

// Message ========================================

var Message = exports.Message = {};

Message.read = function (pbf, end) {
    return pbf.readFields(Message._readField, {method: "", id: null, params: null, result: null, error: null}, end);
};
Message._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.method = pbf.readString();
    else if (tag === 2) obj.id = Id.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.params = pbf.readBytes();
    else if (tag === 4) obj.result = pbf.readBytes();
    else if (tag === 5) obj.error = Error.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.write = function (obj, pbf) {
    if (obj.method) pbf.writeStringField(1, obj.method);
    if (obj.id) pbf.writeMessage(2, Id.write, obj.id);
    if (obj.params) pbf.writeBytesField(3, obj.params);
    if (obj.result) pbf.writeBytesField(4, obj.result);
    if (obj.error) pbf.writeMessage(5, Error.write, obj.error);
};

// Error ========================================

var Error = exports.Error = {};

Error.read = function (pbf, end) {
    return pbf.readFields(Error._readField, {code: 0, message: "", data: null}, end);
};
Error._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.code = pbf.readSVarint();
    else if (tag === 2) obj.message = pbf.readString();
    else if (tag === 3) obj.data = pbf.readBytes();
};
Error.write = function (obj, pbf) {
    if (obj.code) pbf.writeSVarintField(1, obj.code);
    if (obj.message) pbf.writeStringField(2, obj.message);
    if (obj.data) pbf.writeBytesField(3, obj.data);
};

// Id ========================================

var Id = exports.Id = {};

Id.read = function (pbf, end) {
    return pbf.readFields(Id._readField, {null: 0, type: null, num: 0, double: 0, str: ""}, end);
};
Id._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.null = pbf.readVarint(), obj.type = "null";
    else if (tag === 2) obj.num = pbf.readVarint(), obj.type = "num";
    else if (tag === 3) obj.double = pbf.readDouble(), obj.type = "double";
    else if (tag === 4) obj.str = pbf.readString(), obj.type = "str";
};
Id.write = function (obj, pbf) {
    if (obj.null) pbf.writeVarintField(1, obj.null);
    if (obj.num) pbf.writeVarintField(2, obj.num);
    if (obj.double) pbf.writeDoubleField(3, obj.double);
    if (obj.str) pbf.writeStringField(4, obj.str);
};
